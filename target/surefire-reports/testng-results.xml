<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="21" passed="20">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="21699" started-at="2020-08-15T05:04:19Z" finished-at="2020-08-15T05:04:41Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="21699" started-at="2020-08-15T05:04:19Z" finished-at="2020-08-15T05:04:41Z">
      <class name="com.demo.test">
        <test-method status="PASS" signature="invokeBrowser()[pri:0, instance:com.demo.test@3a022576]" name="invokeBrowser" is-config="true" duration-ms="5580" started-at="2020-08-15T05:04:19Z" finished-at="2020-08-15T05:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeBrowser -->
        <test-method status="PASS" signature="regression_verifyTitle()[pri:0, instance:com.demo.test@3a022576]" name="regression_verifyTitle" duration-ms="237" started-at="2020-08-15T05:04:25Z" finished-at="2020-08-15T05:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regression_verifyTitle -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="367" started-at="2020-08-15T05:04:25Z" finished-at="2020-08-15T05:04:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=regression_verifyTitle status=SUCCESS method=test.regression_verifyTitle()[pri:0, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step1()[pri:1, instance:com.demo.test@3a022576]" name="step1" duration-ms="187" started-at="2020-08-15T05:04:26Z" finished-at="2020-08-15T05:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step1 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="33" started-at="2020-08-15T05:04:26Z" finished-at="2020-08-15T05:04:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step1 status=SUCCESS method=test.step1()[pri:1, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step2()[pri:2, instance:com.demo.test@3a022576]" name="step2" duration-ms="1353" started-at="2020-08-15T05:04:26Z" finished-at="2020-08-15T05:04:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step2 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="34" started-at="2020-08-15T05:04:27Z" finished-at="2020-08-15T05:04:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step2 status=SUCCESS method=test.step2()[pri:2, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step3()[pri:3, instance:com.demo.test@3a022576]" name="step3" duration-ms="293" started-at="2020-08-15T05:04:27Z" finished-at="2020-08-15T05:04:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step3 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="35" started-at="2020-08-15T05:04:27Z" finished-at="2020-08-15T05:04:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step3 status=SUCCESS method=test.step3()[pri:3, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step4()[pri:4, instance:com.demo.test@3a022576]" name="step4" duration-ms="471" started-at="2020-08-15T05:04:27Z" finished-at="2020-08-15T05:04:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step4 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="29" started-at="2020-08-15T05:04:28Z" finished-at="2020-08-15T05:04:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step4 status=SUCCESS method=test.step4()[pri:4, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step5()[pri:5, instance:com.demo.test@3a022576]" name="step5" duration-ms="106" started-at="2020-08-15T05:04:28Z" finished-at="2020-08-15T05:04:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step5 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="27" started-at="2020-08-15T05:04:28Z" finished-at="2020-08-15T05:04:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step5 status=SUCCESS method=test.step5()[pri:5, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step6()[pri:6, instance:com.demo.test@3a022576]" name="step6" duration-ms="3077" started-at="2020-08-15T05:04:28Z" finished-at="2020-08-15T05:04:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step6 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="31" started-at="2020-08-15T05:04:31Z" finished-at="2020-08-15T05:04:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step6 status=SUCCESS method=test.step6()[pri:6, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step7()[pri:7, instance:com.demo.test@3a022576]" name="step7" duration-ms="337" started-at="2020-08-15T05:04:31Z" finished-at="2020-08-15T05:04:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step7 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="16" started-at="2020-08-15T05:04:32Z" finished-at="2020-08-15T05:04:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step7 status=SUCCESS method=test.step7()[pri:7, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step8()[pri:8, instance:com.demo.test@3a022576]" name="step8" duration-ms="4448" started-at="2020-08-15T05:04:32Z" finished-at="2020-08-15T05:04:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step8 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="32" started-at="2020-08-15T05:04:36Z" finished-at="2020-08-15T05:04:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step8 status=SUCCESS method=test.step8()[pri:8, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step9()[pri:9, instance:com.demo.test@3a022576]" name="step9" duration-ms="358" started-at="2020-08-15T05:04:36Z" finished-at="2020-08-15T05:04:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step9 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.test@3a022576]" name="flush" is-config="true" duration-ms="32" started-at="2020-08-15T05:04:36Z" finished-at="2020-08-15T05:04:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step9 status=SUCCESS method=test.step9()[pri:9, instance:com.demo.test@3a022576] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="closing()[pri:0, instance:com.demo.test@3a022576]" name="closing" is-config="true" duration-ms="4386" started-at="2020-08-15T05:04:36Z" finished-at="2020-08-15T05:04:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closing -->
      </class> <!-- com.demo.test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
  <suite name="Suite (1)" duration-ms="16908" started-at="2020-08-15T05:04:52Z" finished-at="2020-08-15T05:05:09Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="16908" started-at="2020-08-15T05:04:52Z" finished-at="2020-08-15T05:05:09Z">
      <class name="com.demo.negativeTest">
        <test-method status="PASS" signature="invokeBrowser()[pri:0, instance:com.demo.negativeTest@7fab4be7]" name="invokeBrowser" is-config="true" duration-ms="4337" started-at="2020-08-15T05:04:52Z" finished-at="2020-08-15T05:04:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeBrowser -->
        <test-method status="PASS" signature="verifyTitle()[pri:0, instance:com.demo.negativeTest@7fab4be7]" name="verifyTitle" duration-ms="12" started-at="2020-08-15T05:04:57Z" finished-at="2020-08-15T05:04:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.negativeTest@7fab4be7]" name="flush" is-config="true" duration-ms="20" started-at="2020-08-15T05:04:57Z" finished-at="2020-08-15T05:04:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitle status=SUCCESS method=negativeTest.verifyTitle()[pri:0, instance:com.demo.negativeTest@7fab4be7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step1()[pri:1, instance:com.demo.negativeTest@7fab4be7]" name="step1" duration-ms="163" started-at="2020-08-15T05:04:57Z" finished-at="2020-08-15T05:04:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step1 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.negativeTest@7fab4be7]" name="flush" is-config="true" duration-ms="20" started-at="2020-08-15T05:04:57Z" finished-at="2020-08-15T05:04:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step1 status=SUCCESS method=negativeTest.step1()[pri:1, instance:com.demo.negativeTest@7fab4be7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step2()[pri:2, instance:com.demo.negativeTest@7fab4be7]" name="step2" duration-ms="369" started-at="2020-08-15T05:04:57Z" finished-at="2020-08-15T05:04:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step2 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.negativeTest@7fab4be7]" name="flush" is-config="true" duration-ms="21" started-at="2020-08-15T05:04:57Z" finished-at="2020-08-15T05:04:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step2 status=SUCCESS method=negativeTest.step2()[pri:2, instance:com.demo.negativeTest@7fab4be7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="FAIL" signature="step3()[pri:3, instance:com.demo.negativeTest@7fab4be7]" name="step3" duration-ms="4944" started-at="2020-08-15T05:04:57Z" finished-at="2020-08-15T05:05:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The interest rate is not 0 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The interest rate is not 0 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at com.demo.negativeTest.step3(negativeTest.java:119)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step3 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.negativeTest@7fab4be7]" name="flush" is-config="true" duration-ms="2513" started-at="2020-08-15T05:05:02Z" finished-at="2020-08-15T05:05:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step3 status=FAILURE method=negativeTest.step3()[pri:3, instance:com.demo.negativeTest@7fab4be7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="step4()[pri:4, instance:com.demo.negativeTest@7fab4be7]" name="step4" duration-ms="118" started-at="2020-08-15T05:05:05Z" finished-at="2020-08-15T05:05:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- step4 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.negativeTest@7fab4be7]" name="flush" is-config="true" duration-ms="22" started-at="2020-08-15T05:05:05Z" finished-at="2020-08-15T05:05:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=step4 status=SUCCESS method=negativeTest.step4()[pri:4, instance:com.demo.negativeTest@7fab4be7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="closing()[pri:0, instance:com.demo.negativeTest@7fab4be7]" name="closing" is-config="true" duration-ms="4351" started-at="2020-08-15T05:05:05Z" finished-at="2020-08-15T05:05:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closing -->
      </class> <!-- com.demo.negativeTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite (1) -->
  <suite name="Suite (0)" duration-ms="11543" started-at="2020-08-15T05:04:41Z" finished-at="2020-08-15T05:04:52Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="11543" started-at="2020-08-15T05:04:41Z" finished-at="2020-08-15T05:04:52Z">
      <class name="com.demo.smokeTest">
        <test-method status="PASS" signature="invokeBrowser()[pri:0, instance:com.demo.smokeTest@2227a6c1]" name="invokeBrowser" is-config="true" duration-ms="4181" started-at="2020-08-15T05:04:41Z" finished-at="2020-08-15T05:04:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invokeBrowser -->
        <test-method status="PASS" signature="smoke_verifyTitle()[pri:0, instance:com.demo.smokeTest@2227a6c1]" name="smoke_verifyTitle" duration-ms="22" started-at="2020-08-15T05:04:45Z" finished-at="2020-08-15T05:04:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smoke_verifyTitle -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.smokeTest@2227a6c1]" name="flush" is-config="true" duration-ms="22" started-at="2020-08-15T05:04:45Z" finished-at="2020-08-15T05:04:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=smoke_verifyTitle status=SUCCESS method=smokeTest.smoke_verifyTitle()[pri:0, instance:com.demo.smokeTest@2227a6c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="smoke1()[pri:1, instance:com.demo.smokeTest@2227a6c1]" name="smoke1" duration-ms="249" started-at="2020-08-15T05:04:45Z" finished-at="2020-08-15T05:04:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smoke1 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.smokeTest@2227a6c1]" name="flush" is-config="true" duration-ms="23" started-at="2020-08-15T05:04:45Z" finished-at="2020-08-15T05:04:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=smoke1 status=SUCCESS method=smokeTest.smoke1()[pri:1, instance:com.demo.smokeTest@2227a6c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="smoke2()[pri:2, instance:com.demo.smokeTest@2227a6c1]" name="smoke2" duration-ms="268" started-at="2020-08-15T05:04:45Z" finished-at="2020-08-15T05:04:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smoke2 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.smokeTest@2227a6c1]" name="flush" is-config="true" duration-ms="22" started-at="2020-08-15T05:04:46Z" finished-at="2020-08-15T05:04:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=smoke2 status=SUCCESS method=smokeTest.smoke2()[pri:2, instance:com.demo.smokeTest@2227a6c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="smoke3()[pri:3, instance:com.demo.smokeTest@2227a6c1]" name="smoke3" duration-ms="84" started-at="2020-08-15T05:04:46Z" finished-at="2020-08-15T05:04:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smoke3 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.smokeTest@2227a6c1]" name="flush" is-config="true" duration-ms="23" started-at="2020-08-15T05:04:46Z" finished-at="2020-08-15T05:04:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=smoke3 status=SUCCESS method=smokeTest.smoke3()[pri:3, instance:com.demo.smokeTest@2227a6c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="smoke4()[pri:4, instance:com.demo.smokeTest@2227a6c1]" name="smoke4" duration-ms="77" started-at="2020-08-15T05:04:46Z" finished-at="2020-08-15T05:04:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smoke4 -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.smokeTest@2227a6c1]" name="flush" is-config="true" duration-ms="23" started-at="2020-08-15T05:04:46Z" finished-at="2020-08-15T05:04:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=smoke4 status=SUCCESS method=smokeTest.smoke4()[pri:4, instance:com.demo.smokeTest@2227a6c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="screenshot()[pri:5, instance:com.demo.smokeTest@2227a6c1]" name="screenshot" duration-ms="2353" started-at="2020-08-15T05:04:46Z" finished-at="2020-08-15T05:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshot -->
        <test-method status="PASS" signature="flush(org.testng.ITestResult)[pri:0, instance:com.demo.smokeTest@2227a6c1]" name="flush" is-config="true" duration-ms="15" started-at="2020-08-15T05:04:48Z" finished-at="2020-08-15T05:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=screenshot status=SUCCESS method=smokeTest.screenshot()[pri:5, instance:com.demo.smokeTest@2227a6c1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flush -->
        <test-method status="PASS" signature="closing()[pri:0, instance:com.demo.smokeTest@2227a6c1]" name="closing" is-config="true" duration-ms="4167" started-at="2020-08-15T05:04:48Z" finished-at="2020-08-15T05:04:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closing -->
      </class> <!-- com.demo.smokeTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite (0) -->
</testng-results>
